               -------------------------> O-Auth <---------------------

O-Auth : Open Authorization

It allows a user to grant an application (masaischool.com, cyclic) access to their resources(name,email,dob,profile photo) without sharing thier password.

Steps:
1. The user is asked to grant permission --> Okay, deny
2. The user is redirected to the service provider (google, github);
3. The service provider generate o-auth tokena and sends it back to the application.
4. This application uses that O-auth token to identify/access the user's resources.

Advantages:
1. Smooth login/improved user experience -- user is not required password, faster 
2. More security
3. Controlling what an application can access.
 sign up --> 

 Disadvantages:
 1. Relying/depending on third party service provider.

 2. Complexity in our backend application -> different service providers have their own rules/ways/methods of how a developer should implement Oauth.
 2. Oauth -> Github and Google -> Authentication code for these 2 Oauth's seperately.

 Implementation Steps:

 1. Choose an O-Auth Service Provider:

 2. Register our application ->
 Register with the service provider, follow the instructions, register and -> client ID and client secret.

 3. Install an O-Auth library. ->
 Use a library like passport 

 4. Setup the O-auth flow:
 use the library to handle the O-auth flow in nodejs application

 5. Use the access token
 Authentication user/request to the oauth provider to get user's resources. 






 



